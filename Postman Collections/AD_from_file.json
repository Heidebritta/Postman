{
	"info": {
		"_postman_id": "9940d76a-bab7-4f3a-9bcf-b9bd5531e6b8",
		"name": "ArrivalsDepartures from file",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "arrivalsAndDeparturesForStop",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1e2534d3-601e-4b28-ac6b-0d3f63be5a32",
						"exec": [
							"//Run this test with file TestcsvInput.csv",
							"//https://camsys.sharepoint.com/:x:/s/Software/Ebpsdyga8bVKoDrA8yxcTd0BVQIm1yWaIWyoOSO1GkPULQ?e=IzYwTJ",
							"",
							"//This test will use each stop and validate that the A/D for stop API is returning a valid ",
							"// stopId",
							"// routeShortName",
							"// Destination",
							"//from the file",
							"//It also checks the status of the of the trip",
							"",
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"var stopId = pm.iterationData.get(\"stopId\");",
							"var route1 = pm.iterationData.get(\"routeShortName1\").toString();",
							"var route2 = pm.iterationData.get(\"routeShortName2\").toString();",
							"var route3 = pm.iterationData.get(\"routeShortName3\").toString();",
							"var route4 = pm.iterationData.get(\"routeShortName4\").toString();",
							"var headsign1 = pm.iterationData.get(\"destination1\");",
							"var headsign2 = pm.iterationData.get(\"destination2\");",
							"var headsign3 = pm.iterationData.get(\"destination3\");",
							"//var destination4 = pm.iterationData.get(\"destination4\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"",
							"    pm.test(\"Trip \" +i+ \" stop is \" +stopId, function () {",
							"        pm.expect(arrDeptArray[i].stopId).to.eql(stopId);",
							"        });",
							"        ",
							"    pm.test(\"Trip \" +i+ \" headsign\", function () {",
							"        pm.expect(arrDeptArray[i].tripHeadsign).to.be.oneOf([headsign1, headsign2, headsign3]);",
							"        });",
							"",
							"    pm.test(\"Trip \" +i+ \" routeShortName\", function () {",
							"        pm.expect(arrDeptArray[i].routeShortName).to.be.oneOf([route1, route2, route3, route4]);",
							"    });",
							"",
							"   // pm.test(\"Trip \" +i+ \" routeId\", function () {",
							"   //     pm.expect(arrDeptArray[i].routeId).to.be.oneOf([\"MTASBWY_A\",\"MTASBWY_C\"]);",
							"   //     }); ",
							"    ",
							"   // pm.test(\"Trip \" +i+ \" routeLongName\", function () {",
							"   //     pm.expect(arrDeptArray[i].routeLongName).to.be.oneOf([\"8 Avenue Express\",\"8 Avenue Local\"//]);",
							"   // });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today);",
							"console.log(\"Stop: \"+arrDeptArray[0].stopId+\" headsign: \"+arrDeptArray[0].tripHeadsign);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status=='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							"    //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \" Realtime: \" +realtimeTrips+ \" Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "0e5fb6a3-cb67-4536-8cfd-fa6486730e44",
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "50bffcf6-b193-4c2d-9a23-0077afe488b5",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://hub-mta-{{env}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/{{stopId}}.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"{{stopId}}.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		}
	]
}