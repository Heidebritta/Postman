{
	"info": {
		"_postman_id": "0ecfa543-6ca6-4c1c-92e8-4fb03aa97eb9",
		"name": "ArrDep for stop, output to console",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Subway test, Dev",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"//Check that you are using the right environement, Dev or Prod",
							"//Get the stop_id from the GTFS, or this page",
							"//https://camsys.atlassian.net/wiki/spaces/NYS/pages/1878327299/Subway+StopId+and+Stop+Name",
							"",
							"//Enter the stop_id above, replace the id in the call MTASBWY_XXX",
							"//Run this, and check the Console output (select Console way at the bottom, and adjust the screen so you can see the output)",
							"",
							"//The output is removing all of the canceled trips, printing out the tripId and converting the time to something readable",
							"",
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today + \" Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "12b6a1eb-727b-4443-bc6d-e941cb116fba",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-dev.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_631N.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-dev",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_631N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway test, Dev N",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"//Check that you are using the right environement, Dev or Prod",
							"//Get the stop_id from the GTFS, or this page",
							"//https://camsys.atlassian.net/wiki/spaces/NYS/pages/1878327299/Subway+StopId+and+Stop+Name",
							"",
							"//Enter the stop_id above, replace the id in the call MTASBWY_XXX",
							"//Run this, and check the Console output (select Console way at the bottom, and adjust the screen so you can see the output)",
							"",
							"//The output is removing all of the canceled trips, printing out the tripId and converting the time to something readable",
							"",
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"console.log(\"https://hub-mta-dev.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_631N.json?key=OBA&minutesAfter=90\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today + \" Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "e393b59d-3c66-4397-858b-146d777b5bda",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-dev.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_631N.json?key=OBA&minutesAfter=90",
					"protocol": "https",
					"host": [
						"hub-mta-dev",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_631N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						},
						{
							"key": "minutesAfter",
							"value": "90"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway test, Prod",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today + \" Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "d83cc413-40b1-41c5-a73a-517fafd0d3ad",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-prod.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_631N.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-prod",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_631N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway 142N, 1 line, Prod",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today + \" Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "9fa73f4b-1873-4e5e-a16c-d2fb68b4b5b6",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-prod.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY142N.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-prod",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY142N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway 142N, 1 line, Dev",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"//Check that you are using the right environement, Dev or Prod",
							"//Get the stop_id from the GTFS, or this page",
							"//https://camsys.atlassian.net/wiki/spaces/NYS/pages/1878327299/Subway+StopId+and+Stop+Name",
							"",
							"//Enter the stop_id above, replace the id in the call MTASBWY_XXX",
							"//Run this, and check the Console output (select Console way at the bottom, and adjust the screen so you can see the output)",
							"",
							"//The output is removing all of the canceled trips, printing out the tripId and converting the time to something readable",
							"",
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today + \" Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "97c0e20a-b494-47a8-90b4-4dc551d11988",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-dev.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_142NS.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-dev",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_142NS.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway A48N 1 line, Prod",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today + \" Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "fcb44af4-f2df-4c42-969a-9a108cfee8d9",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-prod.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_A48N.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-prod",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_A48N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway A48N 1 line, Dev",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today + \" Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "4af77e5d-0a5f-474e-80c3-4b31fc8865cf",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-dev.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_A48N.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-dev",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_A48N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway A65S, Dev",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today + \" Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "08ffbe74-03b3-404e-9529-149bd7bfe4a9",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_A65S.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_A65S.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway 257N, Dev",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today + \" Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "9ffeee49-cf2a-4e5b-806a-35fd32dae8b8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_257N.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_257N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway 234S Nevins, Dev",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today + \" Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "5f6fc6c9-0a1e-452e-9c89-536ee8393bcb",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_257S.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_257S.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway 234S Nevins, Prod",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today + \" Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "338afd54-0677-4727-954d-c3538e447ccf",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-prod.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_234S.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-prod",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_234S.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway 234N Nevins, Dev",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today + \" Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "bd657caf-8f5a-4569-a349-a7d83870743d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_234N.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_234N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway A42N, Dev Hoyt-Schermerhorn",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today + \" Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "67844558-d04a-4634-b14b-4c778f18997b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_A42N.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_A42N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway A42N, Prod Hoyt-Schermerhorn",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today + \" Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "c84e3604-475f-4511-b8ad-aefe93727b54",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-prod.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_A42N.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-prod",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_A42N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway A42S, Dev Hoyt-Schermerhorn",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today + \" Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "3d78a9b8-1e51-445a-9310-8b905fd0e18a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-dev.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_A42S.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-dev",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_A42S.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway A42S, Prod Hoyt-Schermerhorn",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today + \" Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "f757918f-9ab9-4b24-b916-f324d0947456",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-prod.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_A42S.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-prod",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_A42S.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Nearby Subway A48N Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonObject = xml2Json(responseBody); ",
							"",
							"pm.test(\"Stop id\", function () {",
							"    pm.expect(jsonObject.groups[0].route.id).to.eql(\"MTASBWY:A48\");",
							"});",
							"",
							"        /*",
							"",
							"        var tripNum;",
							"var today = new Date();",
							"console.log(today);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripNum = i;",
							"   var tripTime;",
							"",
							"    //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[tripNum].predicted == true){",
							"        if (arrDeptArray[tripNum].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[tripNum].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"Trip \" + tripNum + \" predictedArrivalTime is: \" + tripTime);",
							"            }",
							"            else {",
							"                if (arrDeptArray[tripNum].scheduledArrivalTime > 0) {",
							"                arrivalTime = arrDeptArray[tripNum].scheduledArrivalTime;",
							"                //convert the time to something readable",
							"                utcSeconds = arrivalTime.toString().substring(0, 10);",
							"                tripDate.setUTCSeconds(utcSeconds);",
							"                tripTime = tripDate.toString().substring(16, 24);",
							"                console.log(\"Trip \" + tripNum + \" scheduledArrivalTime is: \" + tripTime);",
							"            }",
							"        }",
							"    }",
							"    else {",
							"        if (arrDeptArray[i].status == \"CANCELED\")",
							"        console.log(\"No realtime. Trip\"+i+\" is canceled\");",
							"        else {",
							"            console.log(\"No realtime and Trip\"+i+\"is NOT canceled\"+\" trip: \"+route+\":\"+tripId);",
							"        }",
							"    }",
							"",
							"}",
							"*/",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "964836cb-7af1-430b-9d85-4f4fb9861d2f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://otp-mta-{{env}}.camsys-apps.com/otp/routers/default/nearby?apikey=OMLbtAR7yTaDOT69sqt5wWa2k6dAX6sd&stops=MTASBWY:A48N&signMode=true",
					"protocol": "http",
					"host": [
						"otp-mta-{{env}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"otp",
						"routers",
						"default",
						"nearby"
					],
					"query": [
						{
							"key": "apikey",
							"value": "OMLbtAR7yTaDOT69sqt5wWa2k6dAX6sd"
						},
						{
							"key": "stops",
							"value": "MTASBWY:A48N"
						},
						{
							"key": "signMode",
							"value": "true"
						}
					]
				}
			},
			"response": []
		}
	]
}