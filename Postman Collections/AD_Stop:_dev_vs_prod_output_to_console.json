{
	"info": {
		"_postman_id": "b1bccdbc-df84-4285-9fe7-d50c1a7c9651",
		"name": "AD Stop: Dev vs Prod, output to console",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Subway 142N, 1 line, Prod",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today);",
							"console.log(\"Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   var tripStatus = arrDeptArray[i].tripStatus.status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"    if (status != tripStatus) {",
							"        console.log(\"Trip \"+i+\" status: \" +status+ \" tripStatus: \" +tripStatus);",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "32ccdd2b-82cb-4beb-b158-7c5f89734ac8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env2}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_142N.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env2}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_142N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway 142N, 1 line, Dev",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today);",
							"console.log(\"Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var current = new Date(0);",
							"   var tripTime;",
							"   var currentTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   var tripStatus = arrDeptArray[i].tripStatus.status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status=='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"//    if (status != tripStatus) {",
							"        console.log(\"Trip \"+i+\" status: \" +status+ \" tripStatus: \" +tripStatus);",
							"//    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            console.log(\"Arrival:\" + arrivalTime);",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Arr Time:\" + currentTime);",
							"",
							"            var now = (new Date()).getTime();",
							"            utcSeconds2 = now.toString().substring(0, 10);",
							"            current.setUTCSeconds(utcSeconds2);",
							"            currentTime = current.toString().substring(16, 24);",
							"",
							"            console.log(\"Now:\" + now);",
							"            console.log(\"Current time :\" + currentTime);",
							"",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            //calculate how many minutes from now",
							"",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "16acabd3-e04c-4ae4-bef6-b8323930789d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_142N.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_142N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway R27N, 1 line, Dev",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"var stopsTime=1.500; //we expect it to take at least a minute and a half for each stops",
							"console.log(today);",
							"console.log(\"Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var current = new Date(0);",
							"   var minArrivalSeconds = new Date(0);",
							"   var tripTime;",
							"   var currentTime;",
							"   var minArrivalTime;",
							"   var stopsAway = arrDeptArray[i].numberOfStopsAway;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   var tripStatus = arrDeptArray[i].tripStatus.status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status=='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"//    if (status != tripStatus) {",
							"        console.log(\"Trip \"+i+\" status: \" +status+ \" tripStatus: \" +tripStatus);",
							"//    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            console.log(\"Arrival:\" + arrivalTime);",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Arr Time:\" + tripTime);",
							"",
							"            var now = (new Date()).getTime();",
							"            utcSeconds2 = now.toString().substring(0, 10);",
							"            current.setUTCSeconds(utcSeconds2);",
							"            currentTime = current.toString().substring(16, 24);",
							"            console.log(\"Now:\" + now);",
							"            console.log(\"Current time :\" + currentTime);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign + \" stops away: \" +stopsAway);",
							"",
							"            var minArrivalEpoch = now+(stopsAway*60000);",
							"            console.log(\"Now + min: \" + minArrivalEpoch);",
							"            minArrivalSeconds.setUTCSeconds(minArrivalEpoch);",
							"            minArrivalTime = minArrivalSeconds.toString().substring(16, 24);",
							"            console.log(\"min Arrival time :\" + minArrivalTime);",
							"",
							"            pm.test(\"Minutes away vs stops away\", function() {",
							"                pm.expect(arrivalTime).to.be.greaterThan(now+(stopsTime)*(stopsAway*60000));",
							"            });",
							"",
							"",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "c3dd5d97-4269-4920-b0e9-4fc0604e2cf9",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_R27N.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_R27N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway A48N 1 line, Prod",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today);",
							"console.log(\"Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "304b3cc7-692a-4d87-a809-0f6f59cf7b46",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env2}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_A48N.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env2}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_A48N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway A48N 1 line, Dev",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today);",
							"console.log(\"Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "2cab4f49-fd42-43b5-96cb-5a3cd5a85e20",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_A48N.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_A48N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway A42N, Prod",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today);",
							"console.log(\"Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "825d9a0a-c1f2-43ad-9a0e-5bfeebc3e23b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env2}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_A42N.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env2}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_A42N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway A42N, Dev",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today);",
							"console.log(\"Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "7100195a-42ee-4bdd-b77a-1dbf26b71d2b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_A42N.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_A42N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway A42S, Dev",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today);",
							"console.log(\"Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "4cbfaa18-e810-472d-b4e0-a8202e48c090",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_A42S.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_A42S.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway A42S, Prod",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today);",
							"console.log(\"Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "21963373-f1b0-48f2-861e-a38152c7c317",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env2}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_A42S.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env2}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_A42S.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway R14N, Prod",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today);",
							"console.log(\"Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "f661c18a-9413-4cb9-a86c-2be7665df87c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env2}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_R14N.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env2}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_R14N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway R14N, Dev",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today);",
							"console.log(\"Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "0c515620-cb7f-4571-bc36-e053a5b2b69f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_R14N.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_R14N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Subway R14N, Dev Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today);",
							"console.log(\"Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "77ee9ad6-bb4a-47d0-825e-1a8def01f3a1",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTASBWY_R14N.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTASBWY_R14N.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Bus 405220, Prod Water & Pine",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today);",
							"console.log(\"Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var predicted;",
							"   var status;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   var trippredicted = arrDeptArray[i].tripStatus.predicted;",
							"   var tripstatus = arrDeptArray[i].tripStatus.status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Realtime.    Trip \"+i+\"  Predicted:\"+arrDeptArray[i].predicted+\"   Status:\"+status+\"   predictedArrival: \"+tripTime+\"   Trip: \" +route+\":\"+tripId+\"   headsign: \"+arrDeptArray[i].tripHeadsign+\"  TripStatus-Predicted:\"+arrDeptArray[i].tripStatus.predicted+\"    TripStatus-Status:\"+arrDeptArray[i].tripStatus.status)",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        console.log(\"No realtime. Trip \" +i+ \"  Predicted:\"+arrDeptArray[i].predicted+ \"  Status:\" + status +\"   predictedArrival: \"+arrDeptArray[i].predictedArrivalTime+\"          Trip: \"+route+\":\"+tripId+ \"   headsign: \"+arrDeptArray[i].tripHeadsign+\"  TripStatus-Predicted:\"+arrDeptArray[i].tripStatus.predicted+\"   TripStatus-Status:\"+arrDeptArray[i].tripStatus.status);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "04431d37-6694-4786-9531-28cb57a44f58",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env2}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTA_405220.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env2}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTA_405220.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Bus 405220, Dev Water & Pine",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today);",
							"console.log(\"Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var predicted;",
							"   var status;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   var trippredicted = arrDeptArray[i].tripStatus.predicted;",
							"   var tripstatus = arrDeptArray[i].tripStatus.status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Realtime.    Trip \"+i+\"  Predicted:\"+arrDeptArray[i].predicted+\"   Status:\"+status+\"   predictedArrival: \"+tripTime+\"   Trip: \" +route+\":\"+tripId+\"   headsign: \"+arrDeptArray[i].tripHeadsign+\"  TripStatus-Predicted:\"+arrDeptArray[i].tripStatus.predicted+\"    TripStatus-Status:\"+arrDeptArray[i].tripStatus.status)",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        console.log(\"No realtime. Trip \" +i+ \"  Predicted:\"+arrDeptArray[i].predicted+ \"  Status:\" + status +\"   predictedArrival: \"+arrDeptArray[i].predictedArrivalTime+\"          Trip: \"+route+\":\"+tripId+ \"   headsign: \"+arrDeptArray[i].tripHeadsign+\"  TripStatus-Predicted:\"+arrDeptArray[i].tripStatus.predicted+\"   TripStatus-Status:\"+arrDeptArray[i].tripStatus.status);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "1e7d6ec1-1fe0-4d8c-9dac-83d722db758d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTA_405220.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTA_405220.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Bus 301070, Prod Bergen St/Buffalo Av",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today);",
							"console.log(\"Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var predicted;",
							"   var status;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   var trippredicted = arrDeptArray[i].tripStatus.predicted;",
							"   var tripstatus = arrDeptArray[i].tripStatus.status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Realtime.    Trip \"+i+\"  Predicted:\"+arrDeptArray[i].predicted+\"   Status:\"+status+\"   predictedArrival: \"+tripTime+\"   Trip: \" +route+\":\"+tripId+\"   headsign: \"+arrDeptArray[i].tripHeadsign+\"  TripStatus-Predicted:\"+arrDeptArray[i].tripStatus.predicted+\"    TripStatus-Status:\"+arrDeptArray[i].tripStatus.status)",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        console.log(\"No realtime. Trip \" +i+ \"  Predicted:\"+arrDeptArray[i].predicted+ \"  Status:\" + status +\"   predictedArrival: \"+arrDeptArray[i].predictedArrivalTime+\"          Trip: \"+route+\":\"+tripId+ \"   headsign: \"+arrDeptArray[i].tripHeadsign+\"  TripStatus-Predicted:\"+arrDeptArray[i].tripStatus.predicted+\"   TripStatus-Status:\"+arrDeptArray[i].tripStatus.status);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "2e0b22ab-9cd6-459b-a48b-eb90be17e4c8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env2}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTA_301070.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env2}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTA_301070.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Bus 301070, Dev Bergen St/Buffalo Av",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today);",
							"console.log(\"Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var predicted;",
							"   var status;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   var trippredicted = arrDeptArray[i].tripStatus.predicted;",
							"   var tripstatus = arrDeptArray[i].tripStatus.status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Realtime.    Trip \"+i+\"  Predicted:\"+arrDeptArray[i].predicted+\"   Status:\"+status+\"   predictedArrival: \"+tripTime+\"   Trip: \" +route+\":\"+tripId+\"   headsign: \"+arrDeptArray[i].tripHeadsign+\"  TripStatus-Predicted:\"+arrDeptArray[i].tripStatus.predicted+\"    TripStatus-Status:\"+arrDeptArray[i].tripStatus.status)",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        console.log(\"No realtime. Trip \" +i+ \"  Predicted:\"+arrDeptArray[i].predicted+ \"  Status:\" + status +\"   predictedArrival: \"+arrDeptArray[i].predictedArrivalTime+\"          Trip: \"+route+\":\"+tripId+ \"   headsign: \"+arrDeptArray[i].tripHeadsign+\"  TripStatus-Predicted:\"+arrDeptArray[i].tripStatus.predicted+\"   TripStatus-Status:\"+arrDeptArray[i].tripStatus.status);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "3b60273c-ea44-457e-888e-fbba8b6511ee",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTA_301070.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTA_301070.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Bus Bergen St/Buffalo Ave",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bca89418-4bb8-4fdf-b945-473758ac7cd6",
						"exec": [
							"var jsonData = pm.response.json();",
							"var arrDeptArray = jsonData.data.entry.arrivalsAndDepartures;",
							"",
							"console.log(\"****************\");",
							"",
							"if (arrDeptArray.length > 0) {",
							"//iterate through this and check all",
							"for (let i = 0; i < arrDeptArray.length; i++) {",
							"    pm.test(\"Trip \" +i+ \" Arrival Data is realtime OR trip is canceled\", ()=> {",
							"        if (arrDeptArray[i].predicted==true) {",
							"            pm.expect(arrDeptArray[i].status).not.equal('CANCELED');",
							"        }",
							"        if (arrDeptArray[i].predicted==false) {",
							"            pm.expect(arrDeptArray[i].status).equal('CANCELED');",
							"        }",
							"    });",
							"}",
							"",
							"var tripNum;",
							"var today = new Date();",
							"var realtimeTrips=0;",
							"var canceledTrips=0;",
							"console.log(today);",
							"console.log(\"Stop: \"+arrDeptArray[0].stopId);",
							"",
							"for (let i = 0; i < arrDeptArray.length; i++) {   ",
							"   var arrivalTime;",
							"   var utcSeconds;",
							"   var tripDate = new Date(0); ",
							"   var tripTime;",
							"   var tripId = arrDeptArray[i].tripId;",
							"   var route = arrDeptArray[i].routeShortName;",
							"   var status = arrDeptArray[i].status;",
							"   ",
							"   if(arrDeptArray[i].predicted == true) {",
							"        realtimeTrips = realtimeTrips+1;",
							"    }",
							"    if(arrDeptArray[i].status==='CANCELED'){",
							"        canceledTrips = canceledTrips+1;",
							"    }",
							"",
							" //test if the trip is using realtime data (predicted == true)",
							"    if (arrDeptArray[i].predicted == true){",
							"        if (arrDeptArray[i].predictedArrivalTime > 0) {",
							"            arrivalTime = ",
							"                arrDeptArray[i].predictedArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"",
							"            console.log(\"Trip \"+i+\" predictedArrival: \"+tripTime+\" trip: \" +route+\":\"+tripId+\" headsign: \"+arrDeptArray[i].tripHeadsign);",
							"            }",
							"        else {",
							"            if (arrDeptArray[i].scheduledArrivalTime > 0) {",
							"            arrivalTime = arrDeptArray[i].scheduledArrivalTime;",
							"            //convert the time to something readable",
							"            utcSeconds = arrivalTime.toString().substring(0, 10);",
							"            tripDate.setUTCSeconds(utcSeconds);",
							"            tripTime = tripDate.toString().substring(16, 24);",
							"            console.log(\"PREDICTED TRUE BUT NO PREDICTED ARRIVAL TIME!\");",
							"            console.log(\"Trip \"+i+\" scheduledArrival: \"+tripTime+\" trip: \"+route+\":\"+tripId);",
							"        }}",
							"    }",
							"    else {",
							"        //console.log(\"No realtime. Trip \" +i+ \" is status: \" + status + \" trip: \"+route+\":\"+tripId);",
							"    }",
							"}}",
							"else {",
							"    console.log(\"No Arrivals/Departures returned :(\");",
							"}",
							"console.log(\"Total trips: \" +arrDeptArray.length+ \", Realtime: \" +realtimeTrips+ \", Canceled: \" +canceledTrips);",
							"",
							"pm.test(\"Most trips are realtime\", function() {",
							"    pm.expect(realtimeTrips).to.be.greaterThan(arrDeptArray.length/2);",
							"});",
							"",
							"console.log(\"**************** end\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "5a844b7f-c020-4350-b2ca-9378193790ec",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hub-mta-{{env}}.camsys-apps.com/transit-services/v2/arrivals-and-departures-for-stop/MTA_301070.json?key=OBA",
					"protocol": "https",
					"host": [
						"hub-mta-{{env}}",
						"camsys-apps",
						"com"
					],
					"path": [
						"transit-services",
						"v2",
						"arrivals-and-departures-for-stop",
						"MTA_301070.json"
					],
					"query": [
						{
							"key": "key",
							"value": "OBA"
						}
					]
				}
			},
			"response": []
		}
	]
}